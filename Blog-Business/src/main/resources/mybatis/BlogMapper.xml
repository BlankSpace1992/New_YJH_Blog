<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.business.web.mapper.BlogMapper">
    <resultMap id="BaseResultMap" type="com.blog.business.web.domain.Blog">
        <!--@mbg.generated-->
        <!--@Table t_blog-->
        <id column="uid" jdbcType="VARCHAR" property="uid"/>
        <id column="oid" jdbcType="INTEGER" property="oid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="summary" jdbcType="VARCHAR" property="summary"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
        <result column="tag_uid" jdbcType="VARCHAR" property="tagUid"/>
        <result column="click_count" jdbcType="INTEGER" property="clickCount"/>
        <result column="collect_count" jdbcType="INTEGER" property="collectCount"/>
        <result column="file_uid" jdbcType="VARCHAR" property="fileUid"/>
        <result column="status" jdbcType="BOOLEAN" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="admin_uid" jdbcType="VARCHAR" property="adminUid"/>
        <result column="is_original" jdbcType="VARCHAR" property="isOriginal"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="articles_part" jdbcType="VARCHAR" property="articlesPart"/>
        <result column="blog_sort_uid" jdbcType="VARCHAR" property="blogSortUid"/>
        <result column="level" jdbcType="BOOLEAN" property="level"/>
        <result column="is_publish" jdbcType="VARCHAR" property="isPublish"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="open_comment" jdbcType="BOOLEAN" property="openComment"/>
        <result column="type" jdbcType="BOOLEAN" property="type"/>
        <result column="outside_link" jdbcType="VARCHAR" property="outsideLink"/>
        <result column="user_uid" jdbcType="VARCHAR" property="userUid"/>
        <result column="article_source" jdbcType="BOOLEAN" property="articleSource"/>
        <result column="blogSortName" jdbcType="VARCHAR" property="blogSortName"/>
        <association property="blogSort" javaType="com.blog.business.web.domain.BlogSort">
            <result column="sort_name" property="sortName"/>
            <result column="uid" property="uid"/>
        </association>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        `uid`, oid, title, summary, content, tag_uid, click_count, collect_count, file_uid,
        `status`, create_time, update_time, admin_uid, is_original, author, articles_part,
        blog_sort_uid, `level`, is_publish, sort, open_comment, `type`, outside_link, user_uid,
        article_source
    </sql>
    <select id="getBlogByLevel" resultMap="BaseResultMap">
        select a.uid,
               a.title,
               a.summary,
               a.content,
               a.tag_uid,
               a.click_count,
               a.collect_count,
               a.file_uid,
               a.status,
               a.create_time,
               a.update_time,
               a.admin_uid,
               a.is_original,
               a.author,
               a.articles_part,
               a.blog_sort_uid,
               a.level,
               a.is_publish,
               a.sort,
               a.open_comment,
               a.type,
               a.outside_link,
               a.oid,
               a.user_uid,
               a.article_source
        from t_blog as a
        where a.level = #{level,jdbcType=INTEGER}
          and a.status = #{status,jdbcType=INTEGER}
          and a.is_publish = #{isPublish,jdbcType=VARCHAR}
        order by a.create_time
    </select>

    <select id="getHotBlog" resultMap="BaseResultMap">
        select a.uid,
               a.title,
               a.summary,
               a.content,
               a.tag_uid,
               a.click_count,
               a.collect_count,
               a.file_uid,
               a.status,
               a.create_time,
               a.update_time,
               a.admin_uid,
               a.is_original,
               a.author,
               a.articles_part,
               a.blog_sort_uid,
               a.level,
               a.is_publish,
               a.sort,
               a.open_comment,
               a.type,
               a.outside_link,
               a.oid,
               a.user_uid,
               a.article_source,
               b.uid,
               b.sort_name,
               b.sort_name as blogSortName
        from t_blog as a
                     left join t_blog_sort b on a.blog_sort_uid = b.uid
        where a.is_publish = #{isPublish,jdbcType=VARCHAR}
          and a.status = #{status,jdbcType=INTEGER}
    </select>

    <select id="getNewBlog" resultMap="BaseResultMap">
        select a.uid,
               a.title,
               a.summary,
               a.content,
               a.tag_uid,
               a.click_count,
               a.collect_count,
               a.file_uid,
               a.status,
               a.create_time,
               a.update_time,
               a.admin_uid,
               a.is_original,
               a.author,
               a.articles_part,
               a.blog_sort_uid,
               a.level,
               a.is_publish,
               a.sort,
               a.open_comment,
               a.type,
               a.outside_link,
               a.oid,
               a.user_uid,
               a.article_source,
               b.sort_name as blogSortName
        from t_blog as a
                     left join t_blog_sort b on a.blog_sort_uid = b.uid
        where a.is_publish = #{isPublish,jdbcType=VARCHAR}
          and a.status = #{status,jdbcType=INTEGER}
        order by a.create_time
    </select>

    <select id="getBlogByTime" resultMap="BaseResultMap">
        select a.title,
               a.summary,
               a.uid,
               a.tag_uid,
               a.blog_sort_uid,
               b.uid,
               b.sort_name,
               b.sort_name as blogSortName
        from t_blog as a
                     left join t_blog_sort b on a.blog_sort_uid = b.uid
        where a.is_publish = #{isPublish,jdbcType=VARCHAR}
          and a.status = #{status,jdbcType=INTEGER}
        order by a.create_time
    </select>

    <select id="getBlogList" resultMap="BaseResultMap">
        select a.`uid`,
               a.oid,
               a.title,
               a.summary,
               a.content,
               a.tag_uid,
               a.click_count,
               a.collect_count,
               a.file_uid,
               a.`status`,
               a.create_time,
               a.update_time,
               a.admin_uid,
               a.is_original,
               a.author,
               a.articles_part,
               a.blog_sort_uid,
               a.`level`,
               a.is_publish,
               a.sort,
               a.open_comment,
               a.`type`,
               a.outside_link,
               a.user_uid,
               a.article_source
        from t_blog a
        <where>
            a.status = '1'
            <if test="blogVO.keyword != null and blogVO.keyword != ''">
                <bind name="keywordTemp" value="'%' + blogVO.keyword + '%'"/>
                and a.title like #{keywordTemp,jdbcType=VARCHAR}
            </if>
            <if test="blogVO.tagUid != null and blogVO.tagUid != ''">
                and a.tag_uid = #{blogVO.tagUid,jdbcType=VARCHAR}
            </if>
            <if test="blogVO.blogSortUid != null and blogVO.blogSortUid != ''">
                and a.blog_sort_uid = #{blogVO.blogSortUid,jdbcType=VARCHAR}
            </if>
            <if test="blogVO.levelKeyword != null and blogVO.levelKeyword != ''">
                and a.level = #{blogVO.levelKeyword,jdbcType=VARCHAR}
            </if>
            <if test="blogVO.isPublish != null and blogVO.isPublish != ''">
                and a.is_publish = #{blogVO.isPublish,jdbcType=VARCHAR}
            </if>
            <if test="blogVO.isOriginal != null and blogVO.isOriginal != ''">
                and a.is_original = #{blogVO.isOriginal,jdbcType=VARCHAR}
            </if>
            <if test="blogVO.type != null and blogVO.type != ''">
                and a.type = #{blogVO.type,jdbcType=VARCHAR}
            </if>
            order by a.create_time
        </where>
    </select>

    <select id="getBlogCountByTag" resultType="java.util.Map">
        select substring_index(substring_index(a.tag_uid, ',', b.help_topic_id + 1), ',', -1) as tagUid,
               c.content                                                                      as name,
               count(a.uid)                                                                   as value
        from t_blog a
                     left join mysql.help_topic b
                on help_topic_id &lt; LENGTH(a.tag_uid) - LENGTH(REPLACE(a.tag_uid, ',', '')) + 1
                     left join t_tag c
                on substring_index(substring_index(a.tag_uid, ',', b.help_topic_id + 1), ',', -1) = c.uid
        group by substring_index(substring_index(a.tag_uid, ',', b.help_topic_id + 1), ',', -1), c.content
    </select>

    <select id="getBlogCountByBlogSort" resultType="java.util.Map">
        select a.blog_sort_uid, count(a.uid)
        from t_blog a
        group by a.blog_sort_uid
    </select>

    <select id="getBlogContributeCount" resultType="java.util.Map">
        select date_format(a.create_time, '%Y-%m-%d') as `date`,
               count(uid)                             as count
        from t_blog a
        where a.create_time >= #{startDate,jdbcType=TIMESTAMP}
          and a.create_time &lt;= #{nowDate,jdbcType=TIMESTAMP}
        group by date_format(a.create_time, '%Y-%m-%d')
    </select>
</mapper>
